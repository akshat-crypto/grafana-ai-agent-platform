version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: kubernetes_ai_postgres
    environment:
      POSTGRES_DB: kubernetes_ai_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kubernetes_ai_network

  redis:
    image: redis:7-alpine
    container_name: kubernetes_ai_redis
    ports:
      - "6379:6379"
    networks:
      - kubernetes_ai_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kubernetes_ai_backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=kubernetes_ai_platform
      - JWT_SECRET=your-secret-key-change-in-production
      - OPENROUTER_KEY=${OPENROUTER_KEY:-your-openrouter-api-key}
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - kubernetes_ai_network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kubernetes_ai_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - kubernetes_ai_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  kubernetes_ai_network:
    driver: bridge 